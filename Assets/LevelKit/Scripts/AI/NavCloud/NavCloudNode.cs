// Copyright Semaeopus Ltd. 2017
// This code was created as part of LevelKit on: 2019-11-26 - 9:25
// DO NOT EDIT THIS FILE - Code changes will NOT be picked up and may break your project
// Visit http://wiki.offgridthegame.com for help - Happy Hacking!

using System.Collections;
using System.Collections.Generic;
using UnityEngine;
using System.Linq;

namespace NavCloud
{
    public class NavCloudNode : MonoBehaviour
    {
        enum Position
        {
            kUFL = 0,
            kUFR,
            kUNL,
            kUNR,
            kLFL,
            kLFR,
            kLNL,
            kLNR,
            kMaxPosition
        }

        public int id = -1;
        [SerializeField] private NavCloudNode[] octree = new NavCloudNode[(int)Position.kMaxPosition];

        public NavCloudNode UFL { get { return octree[(int)Position.kUFL]; } set { octree[(int)Position.kUFL] = value; } }
        public NavCloudNode UFR { get { return octree[(int)Position.kUFR]; } set { octree[(int)Position.kUFR] = value; } }
        public NavCloudNode UNL { get { return octree[(int)Position.kUNL]; } set { octree[(int)Position.kUNL] = value; } }
        public NavCloudNode UNR { get { return octree[(int)Position.kUNR]; } set { octree[(int)Position.kUNR] = value; } }
        public NavCloudNode LFL { get { return octree[(int)Position.kLFL]; } set { octree[(int)Position.kLFL] = value; } }
        public NavCloudNode LFR { get { return octree[(int)Position.kLFR]; } set { octree[(int)Position.kLFR] = value; } }
        public NavCloudNode LNL { get { return octree[(int)Position.kLNL]; } set { octree[(int)Position.kLNL] = value; } }
        public NavCloudNode LNR { get { return octree[(int)Position.kLNR]; } set { octree[(int)Position.kLNR] = value; } }

        public NavCloudNode GetNavObjectForPosition(Vector3 position)
        {
            bool greatX = position.x > transform.position.x;
            bool greatY = position.y > transform.position.y;
            bool greatZ = position.z > transform.position.z;

            int index = greatY ? 0 : 4;
            index += greatZ ? 0 : 2;
            index += greatX ? 1 : 0;

            if (octree[index] == null)
            {
                return this;
            }

            return octree[index].GetNavObjectForPosition(position);
        }
    }
}
