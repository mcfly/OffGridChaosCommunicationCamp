// Copyright Semaeopus Ltd. 2017
// This code was created as part of LevelKit on: 2019-11-26 - 9:25
// DO NOT EDIT THIS FILE - Code changes will NOT be picked up and may break your project
// Visit http://wiki.offgridthegame.com for help - Happy Hacking!

using UnityEditor;
using UnityEngine;

public static class MissionObjectCreateFunction 
{
    [MenuItem("GameObject/Off Grid/MissionObjects/Trigger", false, 10)]
    private static void CreateMissionObjectTrigger(MenuCommand menuCommand)
    {
        // Create a custom game object
        GameObject newObject = new GameObject("NewTrigger");
        
        // Ensure it gets reparented if this was a context click (otherwise does nothing)
        GameObjectUtility.SetParentAndAlign(newObject, menuCommand.context as GameObject);
        
        // Register the creation in the undo system
        Undo.RegisterCreatedObjectUndo(newObject, "Create " + newObject.name);

        // Set up the mission object and trigger components
        MissionObject missionObject = Undo.AddComponent<MissionObject>(newObject);
        missionObject.SetType(MissionObject.MissionObjectTypeMask.Trigger);
        BoxCollider boxCollider = Undo.AddComponent<BoxCollider>(newObject);
        boxCollider.isTrigger = true;
        boxCollider.size = new Vector3(2, 2, 2);
        
        // Set the mission objects layer
        newObject.layer = LayerMask.NameToLayer("MissionObjects");
        
        Selection.activeObject = newObject;
    }
    
    [MenuItem("GameObject/Off Grid/MissionObjects/Spawn", false, 10)]
    private static void CreateMissionObjectSpawn(MenuCommand menuCommand)
    {
        // Create a custom game object
        GameObject newObject = new GameObject("NewSpawn");
        
        // Ensure it gets reparented if this was a context click (otherwise does nothing)
        GameObjectUtility.SetParentAndAlign(newObject, menuCommand.context as GameObject);
        
        // Register the creation in the undo system
        Undo.RegisterCreatedObjectUndo(newObject, "Create " + newObject.name);

        // Set up the mission object component
        MissionObject missionObject = Undo.AddComponent<MissionObject>(newObject);
        missionObject.SetType(MissionObject.MissionObjectTypeMask.Spawn);
        
        // Set the mission objects layer
        newObject.layer = LayerMask.NameToLayer("MissionObjects");
        
        Selection.activeObject = newObject;
    }
    
    [MenuItem("GameObject/Off Grid/MissionObjects/HackableDevice", false, 10)]
    private static void CreateMissionObjectHackable(MenuCommand menuCommand)
    {
        // Create a custom game object
        GameObject newObject = new GameObject("NewHackable");
        
        // Ensure it gets reparented if this was a context click (otherwise does nothing)
        GameObjectUtility.SetParentAndAlign(newObject, menuCommand.context as GameObject);
        
        // Register the creation in the undo system
        Undo.RegisterCreatedObjectUndo(newObject, "Create " + newObject.name);

        // Set up the mission object component
        MissionObject missionObject = Undo.AddComponent<MissionObject>(newObject);
        missionObject.SetType(MissionObject.MissionObjectTypeMask.Hackable);
        
        // Set the mission objects layer
        newObject.layer = LayerMask.NameToLayer("MissionObjects");
        newObject.tag = "HackableDevice";
        
        Selection.activeObject = newObject;
    }

    [MenuItem("GameObject/Off Grid/MissionObjects/Grab Interaction", false, 10)]
    private static void CreateMissionObjectGrabInteraction(MenuCommand menuCommand)
    {
        CreateMissionObjectInteraction(menuCommand, MissionObject.InteractionType.Grab);
    }

    [MenuItem("GameObject/Off Grid/MissionObjects/Open Door Interaction", false, 10)]
    private static void CreateMissionObjectOpenDoorInteraction(MenuCommand menuCommand)
    {
        CreateMissionObjectInteraction(menuCommand, MissionObject.InteractionType.OpenDoor);
    }
    
    [MenuItem("GameObject/Off Grid/MissionObjects/Scan Interaction", false, 10)]
    private static void CreateMissionObjectScanInteraction(MenuCommand menuCommand)
    {
        CreateMissionObjectInteraction(menuCommand, MissionObject.InteractionType.Scanning);
    }

    private static void CreateMissionObjectInteraction(MenuCommand menuCommand, MissionObject.InteractionType type)
    {
        // Create a custom game object
        GameObject newObject = new GameObject("New" + type);
        
        // Ensure it gets reparented if this was a context click (otherwise does nothing)
        GameObjectUtility.SetParentAndAlign(newObject, menuCommand.context as GameObject);
        
        // Register the creation in the undo system
        Undo.RegisterCreatedObjectUndo(newObject, "Create " + newObject.name);

        // Set up the mission object and trigger components
        MissionObject missionObject = Undo.AddComponent<MissionObject>(newObject);
        missionObject.SetType(MissionObject.MissionObjectTypeMask.Interaction);
        missionObject.interactionType = type;
        BoxCollider boxCollider = Undo.AddComponent<BoxCollider>(newObject);
        boxCollider.isTrigger = true;
        boxCollider.size = new Vector3(2, 2, 2);
        
        // Set the mission objects layer
        newObject.layer = LayerMask.NameToLayer("MissionObjects");
        
        Selection.activeObject = newObject;
    }
    
    
}
